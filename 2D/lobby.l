unit lobby
	bool inLobby = true
	bool enableFullscreen = true
	Vector2[] points
	
	// Names
	LobbyTextField[] fields
	int showNameIndex = 1
	bool editNames
	const nameSuggestions = [
		"Heiko"
		"Bianca"
		"Bjarne"
		"Tim"
		
		"Christian"
		"Svend"
		"Holger"
		
		"Joe"
		"Kevin"
		
		"Simonas"
		"Dominik"
		"Felix"
		"Edi"
		"Matthias"
		"Phillip"
		"JÃ¼rgen"
		"Jakob"
		"Christopher"
		
		"Krzysztof"
		"Chuck"
		"Markus"
		"Nick"
		"Marijn"
		
		"Carina"
		"Beatrice"
		"Talea"
		"Tanja"
		"Yvonne"
	]
		
	show
		Framework.clear includingLockedObjects:true
		fields.clear
		inLobby = true
		showNameIndex = 1
		editNames = false
		players.each.isReadyInLobby = false
		audio.stop
		
	int counter
	
	tick
		tickSettings
		if Platform.isStaging: drawText "Version:{Platform.buildVersion}", size:20, position:{-940, 520}, align:Left
		if (PeerNetwork.error or core.errorMessage) and Platform.isStaging
			drawText PeerNetwork.error, size:40
			drawText core.errorMessage, size:14, position:{0,40}
			return
		
		// Control show names
		onKeyDown by host
			let cmd = pressedBy.keysCurrentlyDown.contains LeftMetaKey
			if key == E and cmd
				setupFields newHost:pressedBy
				
			if not host: return
			if key == Right
				showName players[showNameIndex++ % players.length]
			else
			if key == Tab and cmd
				showNameIndex = (showNameIndex+1) % players.length
			else
			if key == Enter or key == Tab or key == Right
				switchFieldFocus 1
			else
			if key == Left
				switchFieldFocus -1
			
		int count = players.length
			float videoWidth = count<2 ? 900.0 : 1920/count
			float offset = -videoWidth*(count-1)/2
			float halfVideoHeight = videoWidth*3/8
			
			for players as player, playerIndex
				Vector2 pos = {offset+videoWidth*.index, 0}
				onTouchDown position:pos size:{videoWidth, videoWidth*3/4}
					cyclePlayer player
					
			for players as player, playerIndex
				Vector2 pos = {offset+videoWidth*.index, 0}
				drawVideo ., pos, videoWidth
				
				// Start button
				let text = not .isReadyInLobby ? "START" : Loca.language == German ? "Ich bin bereit" : "I'm ready"
				drawStandardButton text, pos+{0,halfVideoHeight+90}, accentColor:.color, enabled:!.isReadyInLobby, clickableBy:player
					if enableFullscreen: Platform.setFullscreen true forPlayer:touch.by
					// input.playersById[touch.by.id].isReadyInLobby = true
					touch.by.isReadyInLobby = true
					
				if players.length.withinInclusively(Platform.supportedUserCount) and players.all(.isReadyInLobby)
					fields.clear
					restart
						
				Vector2 closePos = pos+{videoWidth/2-15,-halfVideoHeight-25}
				let state = input.internalUsers[player.id]?.connectionState
				if state && state != "connected"
					drawText state, size:80, color:state == "failed" ? Red : Yellow, position:pos+{0, -halfVideoHeight-40}
					drawText "x", size:50, color:#808080, position:closePos
				onTouchDown closePos, size:{32,32}
					input.removePlayer player
				
				let field = fields.find.player == player
					// Set field position
					field.position = pos + {0, -halfVideoHeight-(players.length<=2 ? 85 : 120)}
					if field.effect: field.effect.position = field.position + {0,-190}
					if field.particleSystem: field.particleSystem.position = field.position
						
					if editNames
						// Suggestions
						for nameSuggestions -> name
							drawButton name, position:pos+{-150+100*(i%4),halfVideoHeight+150+20*math.floor(i/4)}, textSize:14, textColor:#808080, textColorOnHover:White, visibleFor:host
								fields[playerIndex].text = name
								setPlayerName player, name
								
						// Circle indicating the first player name to show
						if showNameIndex == playerIndex
							drawCircle field.position+{0,60}, size:20, visibleFor:host

		// For testing, display to coordinates when we click the screen
		if core.drawPointsForTesting
			onTouchDown: points.add .position.clone
			points.each drawText text:. position:. size:30; drawCircle . outlineColor:White size:200
			drawText ++counter, {0, -480}, size:100
		
		// Switch language
		if Loca.supportedLanguages.length > 1
			forPositions Loca.supportedLanguages, end:{930,-510}, delta:{40}
				drawImage Flag[i], pos, frame:Loca.language == cast(i) ? 1 : 0
					Loca.setLanguage cast(i)
		
	setupFields: Player newHost
		input.host = newHost
		this.showNameIndex = host.index + 1
		Framework.clear
		fields.clear
		if not editNames
			editNames = true
			players.each createField ., visibleFor:host
			fields[0].focus
		else
			editNames = false
			input.showPointers = false
			
	switchFieldFocus: int delta
		let focusIndex = fields.indexWhere.isFocused
		focusIndex = (focusIndex + delta) % fields.length
		fields.each.focus focusIndex == i
			
	showName: Player player
		let field = createField player
		.. fadeScaleAndRotateIn startScale:5 startAngle:-.08  endAngle:-.01
		// Effect(image:FireballBlue, position:field.position+{0,70}, size:1000)
		// Effect(image:FireballSoft, position:field.position+{30,70}, size:1000, framesPerSecond:12)
		// Effect(image:GranadeExplosion, position:field.position+{0,-200}, size:1000)
		// Effect(image:NukeCone, position:field.position+{0,-150}, size:1000)
		field.effect = Effect(image:Nuke, size:1000)
		field.particleSystem = ParticleSystem(image:Spark, bursts:1, gravity:.5, minSpeed:10 maxSpeed:20, angleSpread:.5)
		// playSound LobbyImpact
		
	createField: Player player, implicit Player[] visibleFor = null
		let field = LobbyTextField(text:player.name, player, visibleFor, editableBy:host, color:White, size:100, font:ByTheWay, angle:-.01, onChanged:setPlayerName player, .)
		fields.add field
		return field
		
	setPlayerName: Player player, string name
		player.name = name.capitalizeWords
		let user = input.internalUsers[player.id]
			user.name = player.name
		if player.id == input.localUser.id
			core.account.name = player.name
			Platform.setLocalStorageObject("user", core.account)
	
	cyclePlayer: Player player
		watch "Cycle color {player.index}"
		players.moveToBack player
		input.updatePlayers
		player.colorPreferences = [player.index]
	
	tickSettings
		for players -> player
			graphics.visibleFor player
				drawImage settingsIcon, {-920,-500}, size:32
					player.showSettingsInLobby = !player.showSettingsInLobby
					
				if player.showSettingsInLobby
					Vector2 pos = {-650,-500}
					
					drawImage cameraIcon, pos
					forPositions 10 start:pos+{36} delta:{0,26}
						let device = PeerNetwork.devices.videoInput[i]
							drawText device.label, pos, size:18, align:Left, color:PeerNetwork.videoInputId == device.deviceId ? player.color : White
						onTouchDown pos+{200,0}, size:{400,30} by player
							PeerNetwork.setVideoInput device?.deviceId, player
					pos += {450}
					
					drawImage microphoneIcon, pos
					forPositions 10 start:pos+{36} delta:{0,26}
						let device = PeerNetwork.devices.audioInput[i]
							drawText device.label, pos, size:18, align:Left, color:PeerNetwork.audioInputId == device.deviceId ? player.color : White
						onTouchDown pos+{200,0}, size:{400,30} by player
							PeerNetwork.setAudioInput device?.deviceId, player
					pos += {550}
						
					if PeerNetwork.devices.audioOutput	
						drawImage speakerIcon, pos
					forPositions 10 start:pos+{36} delta:{0,26}
						let device = PeerNetwork.devices.audioOutput[i]
							drawText device.label, pos, size:18, align:Left, color:PeerNetwork.audioOutputId == device.deviceId ? player.color : White
						onTouchDown pos+{200,0}, size:{400,30} by player
							PeerNetwork.setAudioOutput device?.deviceId, player
						
Player
	bool showSettingsInLobby
	
internal Object LobbyTextField
	string text
	Font font
	Color color = White
	Player player
	Object effect, particleSystem // Error "The member 'color' can't be a contructor" after this was added
	
	Player editableBy
	float width = 600
	void(string text) onChanged
	
	visible bool isFocused
	private Time lastTypeTime
	
	clear
		text = ""
		isFocused = false
		
	focus: bool isFocused = true
		this.isFocused = isFocused
		lastTypeTime = Time.now
		
	tick
		let c = isFocused and ((Time.now%1000) < 500)
		onTouchDownAny by editableBy
			focus false
		onTouchDown position+{0,size.x/2}, {width,size.x*2}, by:editableBy
			focus true
		if isFocused
			onType by editableBy
				text += .; lastTypeTime = Time.now
				if onChanged != null: onChanged text
			onKeyDown Backspace by editableBy
				if text: text = text.substring(0, text.length-1)
				lastTypeTime = Time.now
				if onChanged != null: onChanged text
					
		drawText text, position+{0, 0}, size, angle, alpha, align:Center, font:ByTheWay, visibleFor
		
		if isFocused and (((Time.now - lastTypeTime)%1500) < 750)
			let textWidth = graphics.getTextWidth text, size, font:ByTheWay
			drawText "|", position+{textWidth/2, 0}, size, angle, alpha, align:Center, font:ByTheWay, visibleFor:editableBy
